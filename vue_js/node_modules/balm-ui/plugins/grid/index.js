!function(e,t){"object"===typeof exports&&"object"===typeof module?module.exports=t():"function"===typeof define&&define.amd?define("$grid",[],t):"object"===typeof exports?exports.$grid=t():e.$grid=t()}("undefined"!==typeof self?self:this,(function(){return function(){"use strict";var e={d:function(t,r){for(var o in r)e.o(r,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:r[o]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r:function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{install:function(){return i},useGrid:function(){return s}});const r=["margin","gutter","column-width"],o=["desktop","tablet","phone"];const n=new class{set(e,t,n){if(!r.includes(e))throw new Error("[$grid]: Please set a grid property: "+JSON.stringify(r));if(!o.includes(t))throw new Error("[$grid]: Please set a device type: "+JSON.stringify(o));document.documentElement.style.setProperty("--mdc-layout-grid-".concat(e,"-").concat(t),n)}};function i(e){e.config.globalProperties.$setGrid=()=>console.warn("[$grid]","The '$setGrid' has been deprecated. Use the '$grid.set' instead"),e.config.globalProperties.$grid=n,e.provide("grid",n)}const d={install:i},s=()=>n;return t.default=d,t}()}));