{"ast":null,"code":"import ConnexionComponent from '@/components/ConnexionComponent.vue';\nimport InscriptionComponent from '@/components/InscriptionComponent.vue';\nimport defineComponent from 'vue';\nimport useConfirm from 'primevue/useconfirm';\nexport default defineComponent({\n  setup() {\n    const confirm = useConfirm();\n\n    function deleteEvent(event) {\n      confirm.require({\n        message: 'Are you sure you want to proceed ?',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          console.log(event);\n        },\n        reject: () => {\n          console.log(\"Rejected\");\n        }\n      });\n    }\n\n    return {\n      deleteEvent\n    };\n  },\n\n  inject: ['loggedin'],\n  components: {\n    ConnexionComponent,\n    InscriptionComponent\n  },\n\n  data() {\n    return {\n      alreadyUser: false\n    };\n  },\n\n  methods: {\n    changeForm() {\n      this.alreadyUser = !this.alreadyUser;\n      this.loggedin = true;\n      console.log(this.loggedin);\n    }\n\n  }\n});","map":{"version":3,"mappings":"AAsBA,OAAOA,kBAAP,MAA+B,qCAA/B;AACA,OAAOC,oBAAP,MAAiC,uCAAjC;AACA,OAAOC,eAAP,MAA4B,KAA5B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AAEA,eAAeD,eAAe,CAAC;AAC3BE,OAAK,GAAG;AACJ,UAAMC,OAAM,GAAIF,UAAU,EAA1B;;AAEA,aAASG,WAAT,CAAqBC,KAArB,EAA4B;AACxBF,aAAO,CAACG,OAAR,CAAgB;AACZC,eAAO,EAAE,oCADG;AAEZC,YAAI,EAAE,4BAFM;AAGZC,cAAM,EAAE,MAAM;AACVC,iBAAO,CAACC,GAAR,CAAYN,KAAZ;AACH,SALW;AAMZO,cAAM,EAAE,MAAM;AACVF,iBAAO,CAACC,GAAR,CAAY,UAAZ;AACJ;AARY,OAAhB;AAUJ;;AACA,WAAO;AAACP;AAAD,KAAP;AACH,GAjB0B;;AAkB3BS,QAAM,EAAE,CAAC,UAAD,CAlBmB;AAmB3BC,YAAU,EAAE;AACZhB,sBADY;AAEZC;AAFY,GAnBe;;AAuB3BgB,MAAI,GAAG;AACP,WAAO;AACHC,iBAAW,EAAE;AADV,KAAP;AAGC,GA3B0B;;AA4B3BC,SAAO,EAAE;AACTC,cAAU,GAAG;AACT,WAAKF,WAAL,GAAmB,CAAC,KAAKA,WAAzB;AACA,WAAKG,QAAL,GAAgB,IAAhB;AACAT,aAAO,CAACC,GAAR,CAAY,KAAKQ,QAAjB;AACA;;AALK;AA5BkB,CAAD,CAA9B","names":["ConnexionComponent","InscriptionComponent","defineComponent","useConfirm","setup","confirm","deleteEvent","event","require","message","icon","accept","console","log","reject","inject","components","data","alreadyUser","methods","changeForm","loggedin"],"sourceRoot":"","sources":["/home/eisti/Desktop/ING3/MicroServices/projet_wom/project-wom/vue_js/src/views/ConnexionInscription.vue"],"sourcesContent":["<template>\n  <div id=\"connexionInscription\">\n    <div v-if=\"alreadyUser\" id=\"connexion\">\n      <ConnexionComponent/>\n      <button v-on:click=\"changeForm()\">Pas encore inscrit ?</button>\n    </div>\n    <div v-if=\"!alreadyUser\" id=\"connexioninscription\">\n      <InscriptionComponent/>\n      <ConfirmPopup>\n          <template #message=\"slotProps\">\n              <div class=\"flex p-4\">\n                  <i :class=\"slotProps.message.icon\" style=\"font-size: 1.5rem\"></i>\n                  <p class=\"pl-2\">{{ slotProps.message.message }}</p>\n              </div>\n          </template>\n      </ConfirmPopup>\n      <Button @click=\"deleteEvent($event)\" icon=\"pi pi-check\">Déjà inscrit ?</Button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ConnexionComponent from '@/components/ConnexionComponent.vue'\nimport InscriptionComponent from '@/components/InscriptionComponent.vue'\nimport defineComponent from 'vue'\nimport useConfirm from 'primevue/useconfirm'\n\nexport default defineComponent({\n    setup() {\n        const confirm = useConfirm();\n\n        function deleteEvent(event) {\n            confirm.require({\n                message: 'Are you sure you want to proceed ?',\n                icon: 'pi pi-exclamation-triangle',\n                accept: () => {\n                    console.log(event)\n                },\n                reject: () => {\n                    console.log(\"Rejected\")\n                }\n            })\n        }\n        return {deleteEvent}\n    },\n    inject: ['loggedin'],\n    components: {\n    ConnexionComponent,\n    InscriptionComponent\n    },\n    data() {\n    return {\n        alreadyUser: false\n    }\n    },\n    methods: {\n    changeForm() {\n        this.alreadyUser = !this.alreadyUser\n        this.loggedin = true\n        console.log(this.loggedin)\n        }\n    }\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}