!function(e,t){"object"===typeof exports&&"object"===typeof module?module.exports=t():"function"===typeof define&&define.amd?define("$typography",[],t):"object"===typeof exports?exports.$typography=t():e.$typography=t()}("undefined"!==typeof self?self:this,(function(){return function(){"use strict";var e={d:function(t,o){for(var n in o)e.o(o,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:o[n]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r:function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{install:function(){return l},useTypography:function(){return c}});const o="mdc-typography",n=["headline1","headline2","headline3","headline4","headline5","headline6","subtitle1","subtitle2","body1","body2","caption","button","overline"];let r;function i(e){let t="";if(!r.includes(e))throw new Error("[$typography]: Please set a valid typographic style:\n"+JSON.stringify(r));return t="".concat(o,"--").concat(e),t}function l(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];r=Array.isArray(t)?n.concat(t):n,e.mixin({mounted(){const e=document.querySelector("body").classList;e.contains(o)||e.add(o)}}),e.config.globalProperties.$tt=i,e.provide("tt",i)}const a={install:l},c=()=>i;return t.default=a,t}()}));