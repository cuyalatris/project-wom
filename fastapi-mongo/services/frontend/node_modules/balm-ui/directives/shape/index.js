!function(e,t){"object"===typeof exports&&"object"===typeof module?module.exports=t():"function"===typeof define&&define.amd?define("vShape",[],t):"object"===typeof exports?exports.vShape=t():e.vShape=t()}("undefined"!==typeof self?self:this,(function(){return function(){"use strict";var e={};const t="mdc-shape--rounded",c="mdc-shape--cut",a={small:"mdc-shape--small",medium:"mdc-shape--medium",large:"mdc-shape--large"},o=(e,t)=>{let{value:c,modifiers:a}=t;if(a.cut){let t=c.split(" ").map((e=>e)),a="0% ".concat(t[0],", ").concat(t[0]," 0%"),o="calc(100% - ".concat(t[1],") 0, 100% ").concat(t[1]),l="100% calc(100% - ".concat(t[2],"), calc(100% - ").concat(t[2],") 100%"),s="".concat(t[3]," 100%, 0px calc(100% - ").concat(t[3],")");e.style.clipPath="polygon(".concat(a,", ").concat(o,", ").concat(l,", ").concat(s,")")}else e.style.borderRadius=c},l=(e,l,s)=>{let{value:n,modifiers:d}=s;if("update"===e)n&&o(l,{value:n,modifiers:d});else if(n)o(l,{value:n,modifiers:d});else{let o=d.cut?[c]:[t];d.small?o.push(a.small):d.large?o.push(a.large):o.push(a.medium),l.classList[e](...o)}},s={name:"shape",beforeMount(e,t){l("add",e,t)},updated(e,t){l("update",e,t)},beforeUnmount(e,t){l("remove",e,t)}};return e.default=s,e=e.default}()}));